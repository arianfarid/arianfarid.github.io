import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bw-5EFTY.js";const h="/assets/bitvsmatchcomplement.DIW5DFqZ.png",k="/assets/bitvsmatchcomplementAE014297.BD62KVDf.png",F=JSON.parse('{"title":"Bitwise DNA Compression in Rust: Small Footprint with Fast Reverse Complements","description":"How I used Rust to compress DNA sequences with 4-bit encodings, enabling fast bitwise rotation-based DNA Complementary base pairs.","frontmatter":{"id":"1","title":"Bitwise DNA Compression in Rust: Small Footprint with Fast Reverse Complements","categories":["Rust","Data Compression","Systems Programming"],"description":"How I used Rust to compress DNA sequences with 4-bit encodings, enabling fast bitwise rotation-based DNA Complementary base pairs.","date":"2025-06-17","tags":["Rust","Systems Programming","Algorithms","DNA","Compression","Bitwise","Bioinformatics"],"search":true,"listed":true},"headers":[],"relativePath":"articles/dna-compression.md","filePath":"articles/dna-compression.md"}'),l={name:"articles/dna-compression.md"};function p(e,s,r,d,E,g){return n(),a("div",null,s[0]||(s[0]=[t("",56)]))}const o=i(l,[["render",p]]);export{F as __pageData,o as default};
