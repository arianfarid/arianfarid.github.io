import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bw-5EFTY.js";const h="/assets/bitvsmatchcompliment.B3AtmWhP.png",k="/assets/bitvsmatchcomplimentAE014297.xg54QdyO.png",o=JSON.parse('{"title":"Bitwise DNA Compression in Rust: Small Footprint with Fast Reverse Compliments","description":"How I used Rust to compress DNA sequences with 4-bit encodings, enabling fast bitwise rotation-based DNA complimentary base pairs.","frontmatter":{"id":"1","title":"Bitwise DNA Compression in Rust: Small Footprint with Fast Reverse Compliments","description":"How I used Rust to compress DNA sequences with 4-bit encodings, enabling fast bitwise rotation-based DNA complimentary base pairs.","date":"2025-06-17","categories":["Rust","Data Compression","Systems Programming"],"tags":["Rust","Systems Programming","Algorithms","DNA","Compression","Bitwise","Bioinformatics"],"search":false,"listed":false,"draft":true},"headers":[],"relativePath":"articles/dna-compression.md","filePath":"articles/dna-compression.md"}'),l={name:"articles/dna-compression.md"};function p(e,s,r,d,E,g){return n(),a("div",null,s[0]||(s[0]=[t("",57)]))}const F=i(l,[["render",p]]);export{o as __pageData,F as default};
