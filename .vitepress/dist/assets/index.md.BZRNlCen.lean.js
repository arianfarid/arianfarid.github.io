import{_ as c,C as h,c as o,o as r,j as e,a,F as i,B as l,t as n,G as u,w as p,k as g}from"./chunks/framework.Bw-5EFTY.js";const f=JSON.parse('[{"frontmatter":{"id":"1","title":"Bitwise DNA Compression in Rust: Small Footprint with Fast Reverse Compliments","categories":["Rust","Data Compression","Systems Programming"],"description":"How I used Rust to compress DNA sequences with 4-bit encodings, enabling fast bitwise rotation-based DNA complimentary base pairs.","date":"2025-06-17","tags":["Rust","Systems Programming","Algorithms","DNA","Compression","Bitwise","Bioinformatics"],"search":true,"listed":true},"excerpt":"<p>DNA datasets are massive. A single human genome can use several gigabytes of storage in its most simplest form of storage. Certain forms of storage can even scale to <a href=\\"https://medium.com/precision-medicine/how-big-is-the-human-genome-e90caa3409b0\\" target=\\"_blank\\" rel=\\"noreferrer\\">200 GB for a single genome alone</a>. As DNA sequencing becomes cheaper, roughly <a href=\\"https://www.genome.gov/about-genomics/fact-sheets/Genomic-Data-Science\\" target=\\"_blank\\" rel=\\"noreferrer\\">40 exabytes of genomic data are produced per year</a>.</p>\\n<p>Efficiently storing and analyzing these sequences is a critical challenge. Furthermore, the ability to analyze large sequences of data are increasingly critical. In this post, we will explore a method to compress DNA using 4-bits per nucleotide in pure Rust, that allows us to generate complimentary base pairs in its compressed form.</p>\\n<p>This technique is especially useful in DNA analytical pipelines, where performance and memory constraints are critical. By minimizing the footprint of each sequence, we simultaneously reduce storage overhead and in-memory costs, without sacrificing speed or the ability to operate directly on compressed data.</p>\\n<h2 id=\\"background\\" tabindex=\\"-1\\">Background <a class=\\"header-anchor\\" href=\\"#background\\" aria-label=\\"Permalink to &quot;Background&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h3 id=\\"dna-bases-and-iupac-codes\\" tabindex=\\"-1\\">DNA Bases and IUPAC Codes <a class=\\"header-anchor\\" href=\\"#dna-bases-and-iupac-codes\\" aria-label=\\"Permalink to &quot;DNA Bases and IUPAC Codes&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>There are <a href=\\"ttps://genome.ucsc.edu/goldenPath/help/iupac.htmls\\" target=\\"_blank\\" rel=\\"noreferrer\\">15 IUPAC codes</a>. The ones that most are familiar with are &quot;A&quot;, &quot;G&quot;, &quot;C&quot;, and &quot;T&quot;, representing the four standard DNA bases. However, DNA sequencing often produces ambiguous results. The remaining 11 codes are for these cases. For example, &quot;R&quot; can represent &quot;G&quot; <em>or</em> &quot;A&quot;, while &quot;N&quot; can represent <em>any</em> nucleotide.</p>\\n<details>\\n<summary>Click to show all 15 IUPAC codes</summary>\\n<p>|  | Symbol | Bases |\\n|</p>\\n","url":"/articles/dna-compression.html"}]'),v={style:{"list-style-type":"none"}},b=["href"],y={style:{"font-size":"0.95em","margin-bottom":"16px"}},w={class:"meta meta-item",style:{"font-size":"0.875em",color:"#666","margin-bottom":"16px"}},_={class:"tags"},q={class:"tags-item"},N=JSON.parse('{"title":"Latest posts","description":"","frontmatter":{"layout":"home","hero":{"name":"Arian Farid","tagline":"Senior Software Developer"}},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),A={name:"index.md"},k=Object.assign(A,{setup(x){return(D,t)=>{const m=h("Badge");return r(),o("div",null,[t[2]||(t[2]=e("p",null,[a("I'm a Senior Software Developer. Formerly a (PhD-trained) Biologist, I bring my passion for understanding complex systems to developing software. This blog is a creative outlet for projects, technical or otherwise, that I find interesting. You can find me on "),e("a",{href:"https://www.linkedin.com/in/arian-farid/",target:"_blank",rel:"noreferrer"},"Linkedin"),a(" and "),e("a",{href:"https://github.com/arianfarid",target:"_blank",rel:"noreferrer"},"GitHub"),a(".")],-1)),t[3]||(t[3]=e("h1",{id:"latest-posts",tabindex:"-1"},[a("Latest posts "),e("a",{class:"header-anchor",href:"#latest-posts","aria-label":'Permalink to "Latest posts"'},"â€‹")],-1)),e("div",v,[(r(!0),o(i,null,l(g(f),s=>(r(),o("li",{key:s.link},[e("a",{href:s.url},[e("h2",null,n(s.frontmatter.title),1)],8,b),e("div",y,n(s.frontmatter.description),1),e("div",w,[t[0]||(t[0]=e("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"})],-1)),a(" "+n(s.frontmatter.date),1)]),e("div",_,[t[1]||(t[1]=a(" Tags: ")),(r(!0),o(i,null,l(s.frontmatter.tags,d=>(r(),o("span",q,[u(m,null,{default:p(()=>[a(n(d),1)]),_:2},1024)]))),256))])]))),128))])])}}}),C=c(k,[["__scopeId","data-v-fe7d181e"]]);export{N as __pageData,C as default};
